{"version":3,"sources":["reducer.js","actions.js","components/counter.js","components/app.js","index.js"],"names":["reducer","state","action","type","value","inc","dec","rnd","Math","floor","random","connect","counter","actions","className","onClick","App","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"iTAaeA,EAbC,WAAwB,IAAvBC,EAAsB,uDAAd,EAAGC,EAAW,uCACrC,OAAQA,EAAOC,MACb,IAAK,MACH,OAAOF,EAAQ,EACjB,IAAK,MACH,OAAOA,EAAQ,EACjB,IAAK,MACH,OAAOA,EAAQC,EAAOE,MACxB,QACE,OAAOH,I,eCRAI,EAAM,iBAAO,CAAEF,KAAM,QACrBG,EAAM,iBAAO,CAAEH,KAAM,QACrBI,EAAM,SAACH,GAClB,MAAO,CAAED,KAAM,MAAOC,MAAOI,KAAKC,MAAsB,GAAhBD,KAAKE,Y,OCoDhCC,eA9BS,SAACV,GACvB,MAAO,CACLW,QAASX,KA4B2BY,EAAzBF,EAjDC,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASP,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,IAAKC,EAAU,EAAVA,IACpC,OACE,qBAAKO,UAAU,OAAf,SACE,gCACE,6BAAKF,IACL,wBAAQG,QAAST,EAAKQ,UAAU,kBAAhC,iBAGA,wBAAQC,QAASV,EAAKS,UAAU,kBAAhC,iBAGA,wBAAQC,QAASR,EAAKO,UAAU,kBAAhC,yBCXOE,EAJH,WACV,OAAO,cAAC,EAAD,KCMHC,EAAQC,YAAYlB,GAexBmB,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.0e5a1813.chunk.js","sourcesContent":["const reducer = (state = 0, action) => {\n  switch (action.type) {\n    case \"INC\":\n      return state + 1;\n    case \"DEC\":\n      return state - 1;\n    case \"RND\":\n      return state + action.value;\n    default:\n      return state;\n  }\n};\n\nexport default reducer","// action creator\nexport const inc = () => ({ type: \"INC\" });\nexport const dec = () => ({ type: \"DEC\" });\nexport const rnd = (value) => {\n  return { type: \"RND\", value: Math.floor(Math.random() * 10) };\n};\n","import React from \"react\";\nimport \"./counter.css\";\nimport { connect } from \"react-redux\";\n// import { bindActionCreators } from \"redux\";\n// import { inc, dec, rnd } from \"../actions\";\nimport * as actions from \"../actions\";\n\nconst Counter = ({ counter, inc, dec, rnd }) => {\n  return (\n    <div className=\"page\">\n      <div>\n        <h1>{counter}</h1>\n        <button onClick={dec} className=\"btn btn-primary\">\n          DEC\n        </button>\n        <button onClick={inc} className=\"btn btn-primary\">\n          INC\n        </button>\n        <button onClick={rnd} className=\"btn btn-primary\">\n          RND\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    counter: state,\n  };\n};\n\n// const mapDispatchToProps = (dispatch) => {\n//   const { inc, dec, rnd } = bindActionCreators(actions, dispatch);\n//   return {\n//     // inc: () => dispatch({ type: \"INC\" }),\n//     // inc: () => dispatch(inc()),\n//     // dec: () => dispatch(dec()),\n//     // rnd: () => {\n//     //   const value = Math.floor(Math.random() * 10);\n//     //   dispatch(rnd(value));\n//     // },\n//     inc,\n//     dec,\n//     // rnd: () => {\n//     //   const value = Math.floor(Math.random() * 10);\n//     //   rnd(value);\n//     // },\n//     rnd\n//   };\n// };\n// const mapDispatchToProps = (dispatch) => {\n//     return bindActionCreators(actions, dispatch);\n//   };\n// export default connect(mapStateToProps, mapDispatchToProps)(Counter);\n\nexport default connect(mapStateToProps, actions)(Counter);\n","import React from 'react'\nimport Counter from './counter'\n\nconst App = () => {\n  return <Counter/>\n}\n\nexport default App","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { createStore } from \"redux\";\nimport reducer from \"./reducer\";\n// import { inc, dec, rnd } from \"./actions\";\n// import * as actions from \"./actions\";\nimport App from \"./components/app\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(reducer);\n// const { dispatch, getState, subscribe } = store;\n\n// const bindActionCreator = (creator, dispatch) => (...args) => {\n//   dispatch(creator(...args))\n// }\n\n// const {incDispatch, decDispatch, rndDispatch} = bindActionCreators(\n//   { incDispatch: inc, decDispatch: dec, rndDispatch: rnd },\n//   dispatch\n// );\n\n// const { inc, dec, rnd } = bindActionCreators(actions, dispatch);\n\n// const update = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n// };\n\n// update();\n\n// subscribe(update);\n\n// const decDispatch = bindActionCreators(dec, dispatch)\n// const rndDispatch = bindActionCreators(rnd, dispatch)\n\n// const incDispatch = () => dispatch(inc());\n// const decDispatch = () => dispatch(dec());\n// const rndDispatch = (value) => dispatch(rnd(value));\n\n// document.getElementById(\"inc\").addEventListener(\"click\", incDispatch);\n\n// document.getElementById(\"dec\").addEventListener(\"click\", decDispatch);\n\n// document.getElementById(\"rnd\").addEventListener(\"click\", () => {\n//   const value = Math.floor(Math.random() * 10);\n//   rndDispatch(value);\n// });\n\n// document.getElementById(\"inc\").addEventListener(\"click\", inc);\n\n// document.getElementById(\"dec\").addEventListener(\"click\", dec);\n\n// document.getElementById(\"rnd\").addEventListener(\"click\", () => {\n//   const value = Math.floor(Math.random() * 10);\n//   rnd(value);\n// });\n\n// const update = () => {\n//   document.getElementById(\"counter\").textContent = getState();\n// };\n\n// subscribe(update);\n\n// =========================\n\n// console.log(store.getState());\n\n// store.dispatch({ type: \"INC\" });\n// console.log(store.getState());\n\n// store.dispatch({ type: \"INC\" });\n// console.log(store.getState());\n\n// store.subscribe(() => {\n//   console.log(store.getState());\n// });\n\n// store.dispatch({ type: \"INC\" });\n// store.dispatch({ type: \"INC\" });\n// store.dispatch({ type: \"INC\" });\n\n// =========================\n\n// let state = reducer(undefined, {});\n\n// state = reducer(state, { type: \"INC\" });\n// console.log(state);\n// state = reducer(state, { type: \"INC\" });\n// console.log(state);\n"],"sourceRoot":""}